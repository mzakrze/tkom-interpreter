3:   "def"                         DEF
8:   "main"                        IDENTIFIER
9:   "("                           LEFT_PARENTH
10:  ")"                           RIGHT_PARENTH
11:  "{"                           LEFT_BRACET
21:  "print"                       IDENTIFIER
22:  "("                           LEFT_PARENTH
31:  "fibonacci"                   IDENTIFIER
32:  "("                           LEFT_PARENTH
33:  "0"                           NUM_LITERAL_INT
34:  ")"                           RIGHT_PARENTH
36:  "+"                           PLUS
40:  " "                           STRING_LITERAL
41:  ")"                           RIGHT_PARENTH
42:  ";"                           SEMICOLON
52:  "print"                       IDENTIFIER
53:  "("                           LEFT_PARENTH
62:  "fibonacci"                   IDENTIFIER
63:  "("                           LEFT_PARENTH
64:  "1"                           NUM_LITERAL_INT
65:  ")"                           RIGHT_PARENTH
67:  "+"                           PLUS
71:  " "                           STRING_LITERAL
72:  ")"                           RIGHT_PARENTH
73:  ";"                           SEMICOLON
83:  "print"                       IDENTIFIER
84:  "("                           LEFT_PARENTH
93:  "fibonacci"                   IDENTIFIER
94:  "("                           LEFT_PARENTH
95:  "2"                           NUM_LITERAL_INT
96:  ")"                           RIGHT_PARENTH
98:  "+"                           PLUS
102: " "                           STRING_LITERAL
103: ")"                           RIGHT_PARENTH
104: ";"                           SEMICOLON
114: "print"                       IDENTIFIER
115: "("                           LEFT_PARENTH
124: "fibonacci"                   IDENTIFIER
125: "("                           LEFT_PARENTH
126: "3"                           NUM_LITERAL_INT
127: ")"                           RIGHT_PARENTH
129: "+"                           PLUS
133: " "                           STRING_LITERAL
134: ")"                           RIGHT_PARENTH
135: ";"                           SEMICOLON
145: "print"                       IDENTIFIER
146: "("                           LEFT_PARENTH
155: "fibonacci"                   IDENTIFIER
156: "("                           LEFT_PARENTH
157: "4"                           NUM_LITERAL_INT
158: ")"                           RIGHT_PARENTH
160: "+"                           PLUS
164: " "                           STRING_LITERAL
165: ")"                           RIGHT_PARENTH
166: ";"                           SEMICOLON
176: "print"                       IDENTIFIER
177: "("                           LEFT_PARENTH
186: "fibonacci"                   IDENTIFIER
187: "("                           LEFT_PARENTH
188: "5"                           NUM_LITERAL_INT
189: ")"                           RIGHT_PARENTH
191: "+"                           PLUS
195: " "                           STRING_LITERAL
196: ")"                           RIGHT_PARENTH
197: ";"                           SEMICOLON
207: "print"                       IDENTIFIER
208: "("                           LEFT_PARENTH
217: "fibonacci"                   IDENTIFIER
218: "("                           LEFT_PARENTH
219: "6"                           NUM_LITERAL_INT
220: ")"                           RIGHT_PARENTH
222: "+"                           PLUS
226: " "                           STRING_LITERAL
227: ")"                           RIGHT_PARENTH
228: ";"                           SEMICOLON
238: "print"                       IDENTIFIER
239: "("                           LEFT_PARENTH
248: "fibonacci"                   IDENTIFIER
249: "("                           LEFT_PARENTH
250: "7"                           NUM_LITERAL_INT
251: ")"                           RIGHT_PARENTH
253: "+"                           PLUS
257: " "                           STRING_LITERAL
258: ")"                           RIGHT_PARENTH
259: ";"                           SEMICOLON
269: "print"                       IDENTIFIER
270: "("                           LEFT_PARENTH
279: "fibonacci"                   IDENTIFIER
280: "("                           LEFT_PARENTH
281: "8"                           NUM_LITERAL_INT
282: ")"                           RIGHT_PARENTH
284: "+"                           PLUS
288: " "                           STRING_LITERAL
289: ")"                           RIGHT_PARENTH
290: ";"                           SEMICOLON
300: "print"                       IDENTIFIER
301: "("                           LEFT_PARENTH
310: "fibonacci"                   IDENTIFIER
311: "("                           LEFT_PARENTH
312: "9"                           NUM_LITERAL_INT
313: ")"                           RIGHT_PARENTH
315: "+"                           PLUS
319: " "                           STRING_LITERAL
320: ")"                           RIGHT_PARENTH
321: ";"                           SEMICOLON
323: "}"                           RIGHT_BRACET
328: "def"                         DEF
338: "fibonacci"                   IDENTIFIER
339: "("                           LEFT_PARENTH
340: "n"                           IDENTIFIER
341: ":"                           COLON
345: "int"                         INT
346: ")"                           RIGHT_PARENTH
347: ":"                           COLON
351: "int"                         INT
353: "{"                           LEFT_BRACET
360: "if"                          IF
361: "("                           LEFT_PARENTH
362: "n"                           IDENTIFIER
365: "=="                          EQEQ
367: "0"                           NUM_LITERAL_INT
368: ")"                           RIGHT_PARENTH
383: "return"                      RETURN
385: "0"                           NUM_LITERAL_INT
386: ";"                           SEMICOLON
395: "else"                        ELSE
398: "if"                          IF
399: "("                           LEFT_PARENTH
400: "n"                           IDENTIFIER
403: "=="                          EQEQ
405: "1"                           NUM_LITERAL_INT
406: ")"                           RIGHT_PARENTH
421: "return"                      RETURN
423: "1"                           NUM_LITERAL_INT
424: ";"                           SEMICOLON
433: "else"                        ELSE
448: "return"                      RETURN
458: "fibonacci"                   IDENTIFIER
459: "("                           LEFT_PARENTH
460: "n"                           IDENTIFIER
462: "-"                           MINUS
464: "1"                           NUM_LITERAL_INT
465: ")"                           RIGHT_PARENTH
467: "+"                           PLUS
477: "fibonacci"                   IDENTIFIER
478: "("                           LEFT_PARENTH
479: "n"                           IDENTIFIER
481: "-"                           MINUS
483: "2"                           NUM_LITERAL_INT
484: ")"                           RIGHT_PARENTH
485: ";"                           SEMICOLON
548: "}"                           RIGHT_BRACET
