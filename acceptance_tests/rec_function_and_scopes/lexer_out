1:   "def"                         DEF
1:   "main"                        IDENTIFIER
1:   "("                           LEFT_PARENTH
1:   ")"                           RIGHT_PARENTH
1:   "{"                           LEFT_BRACET
2:   "print"                       IDENTIFIER
2:   "("                           LEFT_PARENTH
2:   "fibonacci"                   IDENTIFIER
2:   "("                           LEFT_PARENTH
2:   "0"                           NUM_LITERAL_INT
2:   ")"                           RIGHT_PARENTH
2:   "+"                           PLUS
2:   " "                           STRING_LITERAL
2:   ")"                           RIGHT_PARENTH
2:   ";"                           SEMICOLON
3:   "print"                       IDENTIFIER
3:   "("                           LEFT_PARENTH
3:   "fibonacci"                   IDENTIFIER
3:   "("                           LEFT_PARENTH
3:   "1"                           NUM_LITERAL_INT
3:   ")"                           RIGHT_PARENTH
3:   "+"                           PLUS
3:   " "                           STRING_LITERAL
3:   ")"                           RIGHT_PARENTH
3:   ";"                           SEMICOLON
4:   "print"                       IDENTIFIER
4:   "("                           LEFT_PARENTH
4:   "fibonacci"                   IDENTIFIER
4:   "("                           LEFT_PARENTH
4:   "2"                           NUM_LITERAL_INT
4:   ")"                           RIGHT_PARENTH
4:   "+"                           PLUS
4:   " "                           STRING_LITERAL
4:   ")"                           RIGHT_PARENTH
4:   ";"                           SEMICOLON
5:   "print"                       IDENTIFIER
5:   "("                           LEFT_PARENTH
5:   "fibonacci"                   IDENTIFIER
5:   "("                           LEFT_PARENTH
5:   "3"                           NUM_LITERAL_INT
5:   ")"                           RIGHT_PARENTH
5:   "+"                           PLUS
5:   " "                           STRING_LITERAL
5:   ")"                           RIGHT_PARENTH
5:   ";"                           SEMICOLON
6:   "print"                       IDENTIFIER
6:   "("                           LEFT_PARENTH
6:   "fibonacci"                   IDENTIFIER
6:   "("                           LEFT_PARENTH
6:   "4"                           NUM_LITERAL_INT
6:   ")"                           RIGHT_PARENTH
6:   "+"                           PLUS
6:   " "                           STRING_LITERAL
6:   ")"                           RIGHT_PARENTH
6:   ";"                           SEMICOLON
7:   "print"                       IDENTIFIER
7:   "("                           LEFT_PARENTH
7:   "fibonacci"                   IDENTIFIER
7:   "("                           LEFT_PARENTH
7:   "5"                           NUM_LITERAL_INT
7:   ")"                           RIGHT_PARENTH
7:   "+"                           PLUS
7:   " "                           STRING_LITERAL
7:   ")"                           RIGHT_PARENTH
7:   ";"                           SEMICOLON
8:   "print"                       IDENTIFIER
8:   "("                           LEFT_PARENTH
8:   "fibonacci"                   IDENTIFIER
8:   "("                           LEFT_PARENTH
8:   "6"                           NUM_LITERAL_INT
8:   ")"                           RIGHT_PARENTH
8:   "+"                           PLUS
8:   " "                           STRING_LITERAL
8:   ")"                           RIGHT_PARENTH
8:   ";"                           SEMICOLON
9:   "print"                       IDENTIFIER
9:   "("                           LEFT_PARENTH
9:   "fibonacci"                   IDENTIFIER
9:   "("                           LEFT_PARENTH
9:   "7"                           NUM_LITERAL_INT
9:   ")"                           RIGHT_PARENTH
9:   "+"                           PLUS
9:   " "                           STRING_LITERAL
9:   ")"                           RIGHT_PARENTH
9:   ";"                           SEMICOLON
10:  "print"                       IDENTIFIER
10:  "("                           LEFT_PARENTH
10:  "fibonacci"                   IDENTIFIER
10:  "("                           LEFT_PARENTH
10:  "8"                           NUM_LITERAL_INT
10:  ")"                           RIGHT_PARENTH
10:  "+"                           PLUS
10:  " "                           STRING_LITERAL
10:  ")"                           RIGHT_PARENTH
10:  ";"                           SEMICOLON
11:  "print"                       IDENTIFIER
11:  "("                           LEFT_PARENTH
11:  "fibonacci"                   IDENTIFIER
11:  "("                           LEFT_PARENTH
11:  "9"                           NUM_LITERAL_INT
11:  ")"                           RIGHT_PARENTH
11:  "+"                           PLUS
11:  " "                           STRING_LITERAL
11:  ")"                           RIGHT_PARENTH
11:  ";"                           SEMICOLON
12:  "}"                           RIGHT_BRACET
14:  "def"                         DEF
14:  "fibonacci"                   IDENTIFIER
14:  "("                           LEFT_PARENTH
14:  "n"                           IDENTIFIER
14:  ":"                           COLON
14:  "int"                         INT
14:  ")"                           RIGHT_PARENTH
14:  ":"                           COLON
14:  "int"                         INT
14:  "{"                           LEFT_BRACET
15:  "if"                          IF
15:  "("                           LEFT_PARENTH
15:  "n"                           IDENTIFIER
15:  "=="                          EQEQ
15:  "0"                           NUM_LITERAL_INT
15:  ")"                           RIGHT_PARENTH
16:  "return"                      RETURN
16:  "0"                           NUM_LITERAL_INT
16:  ";"                           SEMICOLON
17:  "else"                        ELSE
17:  "if"                          IF
17:  "("                           LEFT_PARENTH
17:  "n"                           IDENTIFIER
17:  "=="                          EQEQ
17:  "1"                           NUM_LITERAL_INT
17:  ")"                           RIGHT_PARENTH
18:  "return"                      RETURN
18:  "1"                           NUM_LITERAL_INT
18:  ";"                           SEMICOLON
19:  "else"                        ELSE
20:  "return"                      RETURN
20:  "fibonacci"                   IDENTIFIER
20:  "("                           LEFT_PARENTH
20:  "n"                           IDENTIFIER
20:  "-"                           MINUS
20:  "1"                           NUM_LITERAL_INT
20:  ")"                           RIGHT_PARENTH
20:  "+"                           PLUS
20:  "fibonacci"                   IDENTIFIER
20:  "("                           LEFT_PARENTH
20:  "n"                           IDENTIFIER
20:  "-"                           MINUS
20:  "2"                           NUM_LITERAL_INT
20:  ")"                           RIGHT_PARENTH
20:  ";"                           SEMICOLON
21:  "}"                           RIGHT_BRACET
