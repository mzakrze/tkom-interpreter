3:   "def"                         DEF
8:   "main"                        IDENTIFIER
9:   "("                           LEFT_PARENTH
10:  ")"                           RIGHT_PARENTH
11:  "{"                           LEFT_BRACET
16:  "var"                         VAR
21:  "some"                        IDENTIFIER
22:  ":"                           COLON
26:  "int"                         INT
28:  "="                           EQ
30:  "4"                           NUM_LITERAL_INT
31:  ";"                           SEMICOLON
38:  "if"                          IF
39:  "("                           LEFT_PARENTH
43:  "some"                        IDENTIFIER
46:  "=="                          EQEQ
48:  "5"                           NUM_LITERAL_INT
49:  ")"                           RIGHT_PARENTH
63:  "print"                       IDENTIFIER
64:  "("                           LEFT_PARENTH
74:  "some = 4"                    STRING_LITERAL
75:  ")"                           RIGHT_PARENTH
76:  ";"                           SEMICOLON
85:  "else"                        ELSE
99:  "print"                       IDENTIFIER
100: "("                           LEFT_PARENTH
111: "some != 4"                   STRING_LITERAL
112: ")"                           RIGHT_PARENTH
113: ";"                           SEMICOLON
123: "print"                       IDENTIFIER
124: "("                           LEFT_PARENTH
128: "some"                        IDENTIFIER
129: ")"                           RIGHT_PARENTH
130: ";"                           SEMICOLON
138: "var"                         VAR
140: "a"                           IDENTIFIER
141: ":"                           COLON
145: "int"                         INT
147: "="                           EQ
153: "myFun"                       IDENTIFIER
154: "("                           LEFT_PARENTH
155: ")"                           RIGHT_PARENTH
156: ";"                           SEMICOLON
162: "a"                           IDENTIFIER
164: "="                           EQ
166: "5"                           NUM_LITERAL_INT
168: "+"                           PLUS
170: "3"                           NUM_LITERAL_INT
172: "*"                           ASTERISK
178: "myFun"                       IDENTIFIER
179: "("                           LEFT_PARENTH
180: ")"                           RIGHT_PARENTH
181: ";"                           SEMICOLON
187: "{"                           LEFT_BRACET
201: "print"                       IDENTIFIER
202: "("                           LEFT_PARENTH
203: "a"                           IDENTIFIER
204: ")"                           RIGHT_PARENTH
205: ";"                           SEMICOLON
217: "var"                         VAR
219: "a"                           IDENTIFIER
220: ":"                           COLON
224: "int"                         INT
226: "="                           EQ
228: "5"                           NUM_LITERAL_INT
229: ";"                           SEMICOLON
243: "print"                       IDENTIFIER
244: "("                           LEFT_PARENTH
245: "a"                           IDENTIFIER
246: ")"                           RIGHT_PARENTH
247: ";"                           SEMICOLON
253: "}"                           RIGHT_BRACET
263: "print"                       IDENTIFIER
264: "("                           LEFT_PARENTH
265: "a"                           IDENTIFIER
266: ")"                           RIGHT_PARENTH
267: ";"                           SEMICOLON
277: "print"                       IDENTIFIER
278: "("                           LEFT_PARENTH
289: "mullby3: "                   STRING_LITERAL
290: ")"                           RIGHT_PARENTH
291: ";"                           SEMICOLON
298: "if"                          IF
299: "("                           LEFT_PARENTH
300: "4"                           NUM_LITERAL_INT
302: "<"                           LESS
304: "5"                           NUM_LITERAL_INT
305: ")"                           RIGHT_PARENTH
319: "print"                       IDENTIFIER
320: "("                           LEFT_PARENTH
337: "4 mniejsze od 5"             STRING_LITERAL
338: ")"                           RIGHT_PARENTH
339: ";"                           SEMICOLON
348: "else"                        ELSE
349: "{"                           LEFT_BRACET
363: "print"                       IDENTIFIER
364: "("                           LEFT_PARENTH
380: "4 wieksze od 5"              STRING_LITERAL
381: ")"                           RIGHT_PARENTH
382: ";"                           SEMICOLON
388: "}"                           RIGHT_BRACET
398: "print"                       IDENTIFIER
399: "("                           LEFT_PARENTH
404: "test2"                       IDENTIFIER
405: "("                           LEFT_PARENTH
406: "5"                           NUM_LITERAL_INT
407: ")"                           RIGHT_PARENTH
409: "+"                           PLUS
413: " "                           STRING_LITERAL
414: ")"                           RIGHT_PARENTH
415: ";"                           SEMICOLON
417: "}"                           RIGHT_BRACET
422: "def"                         DEF
428: "myFun"                       IDENTIFIER
429: "("                           LEFT_PARENTH
430: ")"                           RIGHT_PARENTH
431: ":"                           COLON
435: "int"                         INT
437: "{"                           LEFT_BRACET
448: "return"                      RETURN
450: "4"                           NUM_LITERAL_INT
451: ";"                           SEMICOLON
453: "}"                           RIGHT_BRACET
458: "def"                         DEF
466: "mullBy3"                     IDENTIFIER
467: "("                           LEFT_PARENTH
468: "a"                           IDENTIFIER
469: ":"                           COLON
473: "int"                         INT
474: ")"                           RIGHT_PARENTH
475: ":"                           COLON
479: "int"                         INT
481: "{"                           LEFT_BRACET
492: "return"                      RETURN
494: "3"                           NUM_LITERAL_INT
496: "*"                           ASTERISK
498: "a"                           IDENTIFIER
499: ";"                           SEMICOLON
501: "}"                           RIGHT_BRACET
506: "def"                         DEF
512: "test2"                       IDENTIFIER
513: "("                           LEFT_PARENTH
514: "a"                           IDENTIFIER
515: ":"                           COLON
519: "int"                         INT
520: ")"                           RIGHT_PARENTH
521: ":"                           COLON
525: "int"                         INT
527: "{"                           LEFT_BRACET
538: "return"                      RETURN
544: "test3"                       IDENTIFIER
545: "("                           LEFT_PARENTH
546: "a"                           IDENTIFIER
548: "-"                           MINUS
550: "2"                           NUM_LITERAL_INT
551: ")"                           RIGHT_PARENTH
553: "+"                           PLUS
559: "test3"                       IDENTIFIER
560: "("                           LEFT_PARENTH
561: "a"                           IDENTIFIER
563: "-"                           MINUS
565: "2"                           NUM_LITERAL_INT
566: ")"                           RIGHT_PARENTH
567: ";"                           SEMICOLON
569: "}"                           RIGHT_BRACET
574: "def"                         DEF
580: "test3"                       IDENTIFIER
581: "("                           LEFT_PARENTH
582: "a"                           IDENTIFIER
583: ":"                           COLON
587: "int"                         INT
588: ")"                           RIGHT_PARENTH
589: ":"                           COLON
593: "int"                         INT
595: "{"                           LEFT_BRACET
606: "return"                      RETURN
608: "a"                           IDENTIFIER
609: ";"                           SEMICOLON
612: "}"                           RIGHT_BRACET
